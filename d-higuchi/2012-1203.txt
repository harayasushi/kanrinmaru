-----------------------------------------------------------------------------
12/03

■gitlab
* github クローン (いくつか機能に差はあるらしい？)
- https://github.com/gitlabhq/gitlabhq
* cl-gitlab の作成
- https://github.com/cl-lab-k/cl-gitlab

-----------------------------------------------------------------------------
12/04

■cloudstack本
* 査読
- 気になった箇所を修正。

■gitlab
* cl-gitlab の微修正
- https://github.com/cl-lab-k/cl-gitlab

■219.117.239.188 (sandbox)
* cl-reverse-proxy
- https://github.com/cl-lab-k/cl-reverse-proxy
- 公開ディレクトリ対応

■192.168.122.11 (jenkins-master.akb-sb)
* cl-jenkins
- https://github.com/cl-lab-k/cl-jenkins
- 公開ディレクトリ対応

■219.117.239.178 (kanrinmaru02 / enStratus)
* enStratus
- インストールログを追加。

-----------------------------------------------------------------------------
12/05

■NC研修
* 2回目
- workstation の日時がずれていると knife configure -iが失敗する。
  → workstation の日付を確認すること。
- KVM ホストの日時がずれていると knife cs server create が失敗する。
  → CloudStack システムの日付を確認すること。
- ruby1.8 で knife-cloudstack がインストールできなくなった。
  → knife-cloudstack 0.0.13 で Windows サポートが入ったが、
     それが依存しているライブラリが Ruby 1.9 でしか動かないため。
     gem1.8 install knife-cloudstack --version '0.0.12' でインストールする。
- ruby1.9.1 で knife-cloudstack がインストールできても動作しない。
  → knife-cloudstack 0.0.13 で HTTPS サポートが入ったが、
     うまく動いてない気がする。--no-use-http-ssl も効果がない。
     gem1.9.1 install knife-cloudstack --version '0.0.12' でインストールする。
- knife-cloudstack でインスタンスを作成するときに使った recipe/roles が
  Chef Server に登録された node 情報の run_list に引き継がれていない。
  → 勘違い。手動で node 情報の run_list に追加しないといけない。
     http://wiki.opscode.com/display/chef/Launch+Cloud+Instances+with+Knife#LaunchCloudInstanceswithKnife-InstanceBootstrap
     > Once the Chef run is complete, the new instance will be registered
     > with the Chef Server and be saved as a node object. This process does
     > not set up the Chef Client service, you'll need to add a recipe in the
     > run list that does this.
- PDF からコピペするとシングルクォートがいわゆる全角になる。
  → latexpdf の問題？

-----------------------------------------------------------------------------
12/06

■192.168.122.31 (gitlab.akb-sb)
* gitlab 用
- Ubuntu Server 12.04 インストール & アップデートまで。

■Linux-HA セミナー
* DRBD
- プライマリ複数台はFSの種類に依存しているのでお勧めしない。
  - GFS2 は動作が不安定、OCFS2 は Oracle Linux なのでサポートしていない。
- 実運用で 30TB の動作実績がある。
- 書き込み速度は NIC の速度に依存する。基本的に全力で書き込む。
- バックグラウンド自動再同期は運用しながらで OK。
  - 設定で 30% 程度に自動再同期速度を抑えておくのがお勧め。
- スプリットブレインが起きたら自動的に同期を停止する。
  - どちらのデバイスを捨てるかは人力でやるしかない。
- セカンダリの DRBD はファイルシステムとして mount できないようになっている。
- プライマリとセカンダリは 3本のネットワークでつないでおくことをお勧め。
  - サービス提供線 (グローバル線)
  - Heartbeat 通信と DRBD レプリケーション線 (直結, Bonding がお勧め)
  - Heartbeat 通信線 (直結)
    - Heartbeat が両方途切れるとダウンと判定されるので他要因のない線がよい。
    - DRBD レプリケーション速度は NIC の速度依存なので速ければ速いほどいい。
    - もしグローバル線に Heartbeat 通信を出すなら、broadcast で送らないこと。
      他に DRBD が出している Heartbeat 通信と干渉するおそれがある。
- ヴァージョンは 8.3.14 以上(8.3.x 系でなるべく新しいもの)を推奨。
  - 8.4 系は開発終了したので使わない。
  - 9 系が発表されたけどまだ枯れていないので半年は待ってほしい。
- /etc/drbd.conf は変にチューニングせず初期値でだいたいOK。
  - usage-count は LINBIT 社に統計情報を送信するかどうか。まあ no で OK。
  - syncer はバックグラウンド再同期の速度。NIC の 30% 程度に絞っておく。
  - protocol C とは一番厳しい同期モード。通常はこれで OK。
    - C: セカンダリのディスクに書き込めたことまで確認して次の処理へ。
    - B: セカンダリの DRBD にデータを送り込めたことまで確認して次の処理へ。
    - A: プライマリの DRBD からデータが送り出せたことまで確認して次の処理へ。
  - なぜ protocol A なんてあるの？→遠隔地に複製するときそんなに待てないから。
  - address はレプリケーションで使うアドレス・ポート。
    - リソースごとに一組使うので、リソースが増えたら重複しないように増やす。
  - meta-disk は DRBD メタデータを置く場所の指定。internal は同じディスク。
    - ディスク全体の末尾 1/32000 をメタデータ領域として確保する。
    - よってディスク全体に比べて DRBD はほんの少しだけサイズが小さくなる。
- 30TB の初期同期は 5日間かかった。
  - そういう場合は最初はセカンダリを落としておいて、プライマリを構築。
    構築が終わったらセカンダリを上げてバックグラウンド再同期をさせればよい。
- /proc/drbd
  - nagios や zabbix で監視するにはこの仮想ファイルを使うとよい。
  - Secondary/Secondary はどちらも Primary になってない場合なので誤植ではない。
* Heartbeat, Pacemaker
- Pacemaker のコンポーネント
  - crmd: 中心。
  - cib: XML形式のデータベース管理。
  - pengine: プライマリでのみ動作する。リソースの点数計算など行う。
  - stonithd: ハングしたと判断したハードウェアの電源を切ったりする。
- Heartbeat のコンポーネント
  - heartbeat: 他ノードの heartbeat と通信する。
  - lrmd: リソースの上げ下げ。
- DC: HAクラスタ全体の司令塔となるノードのこと。pengineが動作している。
- lrmd: リソース管理エージェント。
  - リソースの起動、停止、状態監視のためのスクリプトを持つ。
    - OCF (Heartbeat 付属のスクリプト。一般的なデーモン用に多数準備されている)
    - LSB (/etc/init.d/ にあるスクリプト。ただし LSB に準拠している必要あり)
- crm: configure
  - property: 定番パラメタを指定しておけばいい。
  - ms: 1:1 アクティブ・スタンバイ構成の定番パラメタ。
  - colocation, order: これも定番パラメタ。

-----------------------------------------------------------------------------
